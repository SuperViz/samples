/*! For license information please see 62.js.LICENSE.txt */
"use strict";(self.webpackChunkmp_webgl=self.webpackChunkmp_webgl||[]).push([[62],{62576:(i,n,t)=>{t.d(n,{Bl:()=>c,Lm:()=>d,Pi:()=>o,RV:()=>s,e_:()=>l,v6:()=>e});var a=t(19663);class e extends a.m{constructor(){super(),this.id="PLUGIN_RESET_ALL",this.payload={}}}class s extends a.m{constructor(i,n,t){super(),this.id="PLUGIN_RELOAD",this.payload={name:i,config:n,configMeta:t}}}class o extends a.m{constructor(i,n,t){super(),this.id="PLUGIN_LOAD",this.payload={name:i,config:n,configMeta:t}}}class l extends a.m{constructor(i){super(),this.id="PLUGIN_UNLOAD",this.payload={name:i}}}class d extends a.m{constructor(i,n){super(),this.id="PLUGIN_CONFIG_FETCH_DATA",this.payload={operation:i,callback:n}}}class c extends a.m{constructor(i,n){super(),this.id="ATTACHMENT_ASSOCIATE_WITH_PLUGIN",this.payload={attachmentId:i,pluginId:n}}}},98062:(i,n,t)=>{t.r(n),t.d(n,{default:()=>y});var a=t(61864),e=t(92810),s=t(48913),o=t(97542),l=t(73339),d=t(54244),c=t(10374),r=t(62576),u=t(80361),g=t(1581),h=t.n(g),p=t(5477),f=t.n(p),m=t(2957);class P{getFactory(i){return i.messengerFactory}}class y extends o.Y{constructor(){super(...arguments),this.name="plugin",this.data=new l.e,this.allowLoad=!1,this.allowLiveReload=!0,this.ajv=new(h())({strict:!1}),this.onResetPlugins=async()=>{await this.unloadPlugins(),await this.loadConfigured()},this.onLoadPlugin=async({config:i,configMeta:n},t)=>{var a;if(this.allowLiveReload&&t){const e={properties:n,required:[]};for(const i of Object.keys(e.properties)){(null===(a=e.properties[i].required)||void 0===a?void 0:a.includes(i))&&e.required.push(i)}if(!this.ajv.validate(e,i))return;await this.load(Object.assign(Object.assign({},t),{config:i}))}},this.onUnloadPlugin=async i=>{if(this.allowLiveReload&&i){const n={applicationKey:i.applicationKey,id:i.id};await this.unload(n)}},this.onReloadPlugin=async({name:i,config:n,configMeta:t},a)=>{this.allowLiveReload&&(await this.onUnloadPlugin(a),await this.onLoadPlugin({name:i,config:n,configMeta:t},a))},this.debouncedOnReloadPlugin=(0,u.D)(this.onReloadPlugin,500),this.onReloadPluginCommand=async i=>{if(!this.allowLiveReload)return;let n=this.configuredPlugins.find((n=>n.id===i.name));n||(n=this.createLoadableConfig(i.name)),this.debouncedOnReloadPlugin(i,n)},this.debouncedOnLoadPlugin=(0,u.D)(this.onLoadPlugin,500),this.onLoadPluginCommand=async i=>{this.debouncedOnLoadPlugin(i,this.createLoadableConfig(i.name))},this.debouncedOnUnloadPlugin=(0,u.D)(this.onUnloadPlugin,500),this.onUnloadPluginCommand=async i=>{let n=this.configuredPlugins.find((n=>n.id===i.name));if(!n){const t=this.availablePlugins.get(i.name);t&&(n={applicationKey:t.applicationKey,id:t.name})}this.debouncedOnUnloadPlugin(n)},this.onFetchSdkDataCommand=async i=>{const n=this.pluginConfigDataModule.serviceSdkKey;class t{constructor(i){this.sdk=i}connect(){return this.sdk.connectPlugin(n,"PluginConfigRootConnection")}cancelConnecting(){}}this.serviceSdkConnection||(this.serviceSdkConnection=await s.tK.connect(new t(this.sdk),new P,window));const[a,e]=i.operation.split(".");let o;try{const i=this.serviceSdkConnection[a][e];o=i.subscribe?await new Promise(((n,t)=>{const a=i.subscribe((i=>{a.cancel(),n(i)}))})):await i()}catch(n){throw new Error("Failed to run command: "+i.operation)}i.callback(o)}}async init(i,n){if(f()(this.ajv),[this.ses,this.sdk,this.pluginConfigDataModule]=await Promise.all([n.getModuleBySymbol(e.lC),n.getModuleBySymbol(a.Mv),n.getModuleBySymbol(e.Yi)]),this.engine=n,this.allowLoad=i.pluginPolicies.enabled,this.allowLiveReload=this.allowLoad&&!this.pluginConfigDataModule.pluginConfigData.disabled&&!this.pluginConfigDataModule.pluginConfigData.preventLiveEdit,this.allowLoad){const i=n.subscribe(c.LZ,(async({phase:t,application:a})=>{t===d.nh.PLAYING&&(i.cancel(),this.allowLiveReload?await this.loadConfigured():(this.log.devInfo("Reached PLAYING stage, checking whether configured plugins need to load to start: ",a),a===d.Mx.SHOWCASE&&await this.loadConfigured(),this.bindings.push(n.subscribe(c.pB,(async i=>{if(this.log.devInfo("Switch in active application detected by plugin system: ",i.application),i.application===d.Mx.WORKSHOP)try{await this.disposeAll()}catch(i){this.log.debugWarn("Entering workshop, one or more plugins failed to dispose properly:",i)}else i.application===d.Mx.SHOWCASE&&await this.loadConfigured()})))))}))}this.bindings.push(n.commandBinder.addBinding(r.v6,this.onResetPlugins),n.commandBinder.addBinding(r.RV,this.onReloadPluginCommand),n.commandBinder.addBinding(r.Pi,this.onLoadPluginCommand),n.commandBinder.addBinding(r.e_,this.onUnloadPluginCommand),n.commandBinder.addBinding(r.Lm,this.onFetchSdkDataCommand)),n.market.register(this,l.e,this.data)}async loadConfigured(){if(this.pluginConfigDataModule.registryLoaded){if(this.pluginConfigDataModule.pluginConfigData.disabled)return void this.log.debug("Cannot load plugins! Disabled by URL parameter.");this.configuredPlugins=await this.pluginConfigDataModule.getConfiguredPlugins(),this.availablePlugins=this.pluginConfigDataModule.pluginConfigData.availablePlugins,this.log.debug("Combined configuration with registry data, loading plugins: "+JSON.stringify(this.configuredPlugins,void 0,2)),await this.waitForPluginLoad()}}async waitForPluginLoad(){if(!this.configuredPlugins)return void this.log.error("Waiting for load before plugin records fetched.");const i=[];for(const n of this.configuredPlugins)i.push(this.load(n).then((()=>{this.engine.broadcast(new m.I(n.id,n.src,Date.now()-performance.timing.navigationStart))})));try{await Promise.all(i)}catch(i){this.log.warn("Issues were encountered loading configured plugins.")}}async fetchPlugin(i,n,t,a){a&&this.ses.freezeForStrict();const e=await this.ses.makeSecureEnvironment(i+""+(t?"-"+t:""),n,a);if(e){return[e,e.compartment.globalThis.plugin]}return null}async unload(i){const n=i.id&&""!==i.id?i.id:"default",t={applicationKey:i.applicationKey,id:n},a=this.data.get(t);let e=null;if(a){try{e=a.dispose()}catch(i){this.log.warn("An error occurred when disposing a plugin, it may be in a partially disposed state",i)}this.data.delete(t)}return e||Promise.resolve()}async load(i){const{applicationKey:n,src:t,id:a,strict:e}=i;if(!this.allowLoad){const i=t.startsWith("http")?t:`${t.substring(0,16)}...`;return Promise.reject(`Load for plugin <${a}:${i}> requested, but plugin system is not available.`)}const s=void 0===e||e,o=a||"default",l={applicationKey:n,id:o};if(this.data.get(l))return Promise.reject(`Plugin for ${n}-${o} already loaded.`);const[d,c]=await this.fetchPlugin(n,t,o,s)||[];d&&c&&await this.initPlugin(d,c.factory,i)}async initPlugin(i,n,t){const a=n(),{applicationKey:e,id:o,config:l}=t;let d=()=>{};const c=a.onInit||a.init;let r=Promise.resolve();if(c){class i{constructor(i){this.sdk=i}connect(){return this.sdk.connectPlugin(e,o)}cancelConnecting(){}}const n=await s.tK.connect(new i(this.sdk),new P,window);r=c.call(a,n,l),d=()=>n.disconnect()}async function u(){const n=a.onDestroy||a.dispose;return((null==n?void 0:n.call(a))||Promise.resolve()).finally((()=>{d(),i.dispose()}))}const g={applicationKey:e,id:o};try{return await r,this.data.set(g,a,u),Promise.resolve()}catch(i){this.log.warn("Plugin initialization failed: ",i),this.log.debugWarn("Attemptying dispose for clean up...");try{await u()}catch(i){this.log.warn("Auto-cleanup of plugin had errors: ",i)}return Promise.reject(i)}}dispose(i){super.dispose(i),this.disposeAll().catch((i=>{this.log.warn("One or more plugins failed to dispose properly.",i)}))}disposeAll(){return this.configuredPlugins=[],this.unloadPlugins()}unloadPlugins(){const i=[];for(const[n,t]of this.data.plugins.entries())i.push(t.dispose());return this.data.plugins.clear(),Promise.all(i)}createLoadableConfig(i){const n=this.availablePlugins.get(i),{src:t,config:a,applicationKey:e,strict:s}=n;return{id:i,src:t,config:a,applicationKey:e,strict:s}}}}}]);